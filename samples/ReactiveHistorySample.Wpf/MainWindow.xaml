<Window x:Class="ReactiveHistorySample.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ReactiveHistorySample.Wpf"
        xmlns:controls="clr-namespace:ReactiveHistorySample.Wpf.Controls"
        xmlns:vm="clr-namespace:ReactiveHistorySample.ViewModels;assembly=ReactiveHistorySample.ViewModels"
        mc:Ignorable="d"
        Title="ReactiveHistorySample.Wpf" Height="700" Width="1000"
        WindowStartupLocation="CenterScreen"
        UseLayoutRounding="True" SnapsToDevicePixels="True" TextOptions.TextFormattingMode="Display">
    <Window.Resources>
        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate DataType="{x:Type vm:PointShapeViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="Name" VerticalAlignment="Center"/>
                <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Name.Value, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="X" VerticalAlignment="Center"/>
                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding X.Value, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Delay=500}" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="0" Grid.Row="2" Text="Y" VerticalAlignment="Center"/>
                <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Y.Value, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Delay=500}" VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:LineShapeViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="Name" VerticalAlignment="Center"/>
                <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Name.Value, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                <TabControl Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1">
                    <TabItem Header="Start">
                        <ContentControl Content="{Binding Start.Value}"/>
                    </TabItem>
                    <TabItem Header="End">
                        <ContentControl Content="{Binding End.Value}"/>
                    </TabItem>
                </TabControl>
                <Button Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" Content="Delete" Command="{Binding DeleteCommand}"/>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid Margin="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Column="0" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="Undo" Command="{Binding UndoCommand}"/>
            <Button Grid.Column="1" Content="Clear" Command="{Binding ClearCommand}"/>
            <Button Grid.Column="2" Content="Redo" Command="{Binding RedoCommand}"/>
        </Grid>
        <ListBox Grid.Column="0" Grid.Row="1" x:Name="shapes" ItemsSource="{Binding Shapes}">
            <ListBox.Resources>
                <DataTemplate DataType="{x:Type vm:LineShapeViewModel}">
                    <TextBlock Text="{Binding Name.Value}"/>
                </DataTemplate>
            </ListBox.Resources>
        </ListBox>
        <ContentControl Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Content="{Binding ElementName=shapes, Path=SelectedItem, Mode=OneWay}" HorizontalContentAlignment="Stretch"/>
        <controls:LayerCanvas Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" x:Name="layerCanvas" Background="LightGray" Width="600" Height="500"/>
    </Grid>
</Window>
